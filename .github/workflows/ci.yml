name: ci

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN: 1.86.0

jobs:
  rust_tests:
    name: rust tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - 1.85.0
          - beta
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Tests
        run: |
          # fail if we're not on "beta" and the matrix value doesn't match RUST_TOOLCHAIN
          if [ "${{ matrix.toolchain }}" != "beta" ] && \
             [ "${{ matrix.toolchain }}" != "${{ env.RUST_TOOLCHAIN }}" ]; then
            echo "❌ Toolchain mismatch: matrix=${{ matrix.toolchain }} but RUST_TOOLCHAIN=${{ env.RUST_TOOLCHAIN }}" >&2
            exit 1
          fi
          
          rustup toolchain install ${{ matrix.toolchain }}
          rustup default ${{ matrix.toolchain }}

          cargo build --all-features --verbose
          cargo test --all-features --verbose

  rust_formatting:
    name: rust formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check formatting
        run: |
          rustup toolchain install ${{ env.RUST_TOOLCHAIN }}
          rustup default ${{ env.RUST_TOOLCHAIN }}
          rustup component add rustfmt

          cargo fmt --check

  rust_lints:
    name: rust lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check clippy warnings
        run: |
          rustup toolchain install ${{ env.RUST_TOOLCHAIN }}
          rustup default ${{ env.RUST_TOOLCHAIN }}
          rustup component add clippy 

          cargo clippy -- -D warnings

  rust_docs:
    name: rust docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check rustdoc warnings
        run: |
          rustup toolchain install ${{ env.RUST_TOOLCHAIN }}
          rustup default ${{ env.RUST_TOOLCHAIN }}

          RUSTDOCFLAGS='--deny warnings' cargo doc --no-deps

  npm_checks:
    name: npm checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install NodeJS dependencies
        run: |
          pnpm install

      - name: Format/linting/import sorting
        run: |
          pnpm --filter "./packages/*" run ci
