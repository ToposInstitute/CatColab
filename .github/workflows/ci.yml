name: ci

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  rust_tests:
    name: rust tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Tests
        run: |
          rustup toolchain install ${{ matrix.toolchain }}
          rustup default ${{ matrix.toolchain }}

          cargo build --all-features --verbose
          cargo test --all-features --verbose

  rust_formatting:
    name: rust formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain from file
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt

      - name: Check formatting
        run: |
          cargo fmt --check -- --config=normalize_comments=true

  rust_lints:
    name: rust lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain from file
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Check clippy warnings
        run: |
          cargo clippy -- -D warnings

  rust_docs:
    name: rust docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain from file
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Check rustdoc warnings
        run: |
          RUSTDOCFLAGS='--deny warnings' cargo doc --no-deps

  frontend_tests:
    name: frontend tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install Rust toolchain from file
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          # Don't override flags in cargo config files.
          rustflags: ""

      - name: Build frontend
        run: |
          pnpm install
          pnpm --filter ./packages/frontend run build -- --mode development

      - name: Run frontend tests
        run: |
          pnpm --filter ./packages/frontend run test:no-backend

  npm_checks:
    name: npm checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install NodeJS dependencies
        run: |
          pnpm install

      - name: Format/linting/import sorting
        run: |
          pnpm --filter "./packages/*" run ci

  build_nixos_system:
    name: build NixOS system
    runs-on: ubuntu-latest
    needs: [run_nix_checks]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Nix
      uses: cachix/install-nix-action@v25
      with:
        nix_path: nixpkgs=channel:25.05

    - name: Configure Cachix
      uses: cachix/cachix-action@v14
      with:
        name: catcolab-jmoggr
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: Build the NixOS system for catcolab-next
      run: nix build .#nixosConfigurations.catcolab-next.config.system.build.toplevel

  run_nix_checks:
    name: run nix checks
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Nix
      uses: cachix/install-nix-action@v25
      with:
        nix_path: nixpkgs=channel:25.05

    - name: Configure Cachix
      uses: cachix/cachix-action@v14
      with:
        name: catcolab-jmoggr
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: Enable KVM
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm

    - name: Run Nix checks
      run: nix flake check

  run_frontend_tests:
    name: run frontend tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Nix
      uses: cachix/install-nix-action@v25
      with:
        nix_path: nixpkgs=channel:25.05

    - name: Configure Cachix
      uses: cachix/cachix-action@v14
      with:
        name: catcolab-jmoggr
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: Run frontend tests
      run: nix build .#checks.x86_64-linux.frontend-tests -L --no-sandbox

