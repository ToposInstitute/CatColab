\title{Backend HTTP/Websocket Server}

\p{For the relation macro app demo, we may want to keep everything very simple, and just use a pure-typescript app instead of trying to write a Rust backend. This means that we need a typescript-based http/websocket server. There are several options in this space.}

\ul{
  \li{[Express.js](http://expressjs.com/) is the "default" choice for HTTP server in nodejs. However, it seems like the websocket module [express-ws](https://www.npmjs.com/package/express-ws) is somewhat unmaintained and does not come with typescript definitions.}
  \li{[Fastify](https://fastify.dev/) seems like a more modern express, it has a recently-updated websocket library as well in [fastify-websocket](https://github.com/fastify/fastify-websocket). There are some other similar-looking libraries, like [hapi](hapi.dev) and [koa](https://koajs.com) but neither of them seem to have well-maintained websocket libraries?}
  \li{We could use the nodejs built-in [http module](https://nodejs.org/api/http.html), along with the [ws](https://github.com/websockets/ws) library. Probably the simplest option, but perhaps a little difficult? Incidentally, both fastify-websocket and [y-websocket](https://github.com/yjs/y-websocket) seem to use this ws library.}
  \li{[Deno](https://deno.com) is an alternative, more-modern server-side javascript runtime, which incidentally is what quarto uses. Notably, it runs typescript natively without compilation, which is pretty cool. It also has built-in [http](https://deno.land/api@v1.42.4?s=Deno.HttpServer) and [websocket](https://deno.land/api@v1.42.4?s=Deno.upgradeWebSocket) libraries, and it seems like these are meant to be used directly rather than just be built upon by other libraries. Searching "org:yjs deno" on github returns [this](https://github.com/yjs/y-redis/tree/master?tab=readme-ov-file#missing-features), however, which is not encouraging.}
}

\p{Recommendation: either fastify or the built-in http module in nodejs. Probably we should start with the [example server in y-websocket](https://github.com/yjs/y-websocket/blob/master/bin/server.cjs), which uses the built-in http module, and adapt it to our needs, upgrading to fastify only if we feel it is necessary.}
