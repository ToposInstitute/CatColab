{
  "db_name": "PostgreSQL",
  "query": "\n        WITH\n            filtered_ids AS (\n                SELECT refs.id\n                FROM refs\n                WHERE (\n                    -- optionally filter by owner username\n                    $2::text IS NULL\n                    OR EXISTS (\n                        SELECT 1\n                        FROM permissions\n                        JOIN users\n                        ON users.id = permissions.subject\n                        WHERE\n                            permissions.object = refs.id\n                            AND permissions.level  = 'own'\n                            AND users.username = $2\n                    )\n                ) AND (\n                    -- optionally filter by document name\n                    $3::text IS NULL\n                    OR EXISTS (\n                      SELECT 1\n                      FROM snapshots\n                      WHERE\n                        snapshots.id = refs.head\n                        AND snapshots.content->>'name' ILIKE '%' || $3 || '%'\n                    )\n                ) AND (\n                    -- filter by minimum permission level or 'read'\n                    get_max_permission($1, refs.id) >= COALESCE($4::permission_level, 'read'::permission_level)\n                ) AND (\n                    -- optionally filter by non-public documents\n                    $5::bool IS NULL\n                    OR $5 IS TRUE\n                    OR EXISTS (\n                        SELECT 1\n                        FROM permissions p_searcher\n                        WHERE\n                            p_searcher.object = refs.id\n                            AND p_searcher.subject = $1\n                    )\n                )\n            ),\n            paged_ids AS (\n                SELECT id\n                FROM filtered_ids\n                ORDER BY (SELECT refs.created FROM refs WHERE refs.id = filtered_ids.id) DESC\n                LIMIT  $6::int4\n                OFFSET $7::int4\n            ),\n            stubs AS (\n                SELECT *\n                FROM get_ref_stubs(\n                    $1,\n                    (SELECT array_agg(id) FROM paged_ids)\n                )\n            ),\n            total AS (\n                SELECT COUNT(*) AS total_count FROM filtered_ids\n            )\n        SELECT\n            stubs.ref_id AS \"ref_id!\",\n            stubs.name,\n            stubs.type_name,\n            stubs.created_at AS \"created_at!\",\n            stubs.permission_level AS \"permission_level!: PermissionLevel\",\n            stubs.owner_id,\n            stubs.owner_username,\n            stubs.owner_display_name,\n            -- returning the total like this is somewhat hacky, but allows us to avoid another table scan\n            -- and duplicating the filter logic\n            total.total_count::int4\n        FROM stubs\n        CROSS JOIN total;\n        ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "ref_id!",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "name",
        "type_info": "Text"
      },
      {
        "ordinal": 2,
        "name": "type_name",
        "type_info": "Text"
      },
      {
        "ordinal": 3,
        "name": "created_at!",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 4,
        "name": "permission_level!: PermissionLevel",
        "type_info": {
          "Custom": {
            "name": "permission_level",
            "kind": {
              "Enum": [
                "read",
                "write",
                "maintain",
                "own"
              ]
            }
          }
        }
      },
      {
        "ordinal": 5,
        "name": "owner_id",
        "type_info": "Text"
      },
      {
        "ordinal": 6,
        "name": "owner_username",
        "type_info": "Text"
      },
      {
        "ordinal": 7,
        "name": "owner_display_name",
        "type_info": "Text"
      },
      {
        "ordinal": 8,
        "name": "total_count",
        "type_info": "Int4"
      }
    ],
    "parameters": {
      "Left": [
        "Text",
        "Text",
        "Text",
        {
          "Custom": {
            "name": "permission_level",
            "kind": {
              "Enum": [
                "read",
                "write",
                "maintain",
                "own"
              ]
            }
          }
        },
        "Bool",
        "Int4",
        "Int4"
      ]
    },
    "nullable": [
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
    ]
  },
  "hash": "560725c94ca6def3a16301a77bcba3dd08fd830ac6561f9cd5dd43033bc1192d"
}
